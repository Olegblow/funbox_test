Q: Чем, по-вашему, Python превосходит остальные языки программирования?
   Для ка-ких задач он подходит лучше всего? Для чего он не подходит?

A: На пайтан очень низкий порог вхождения. Также очень большое комьюнити и большой выбор библиотек налюбой вкус и цвет.
   На python очень легко создавать приложения, так где на других языках будет 100 строк можно управится за 15-20 на пайтон.
   чего уж говорить хелоу ворлд. всего лишь в 1 строку). после с/с++ для меня
   было открытие что код может быть на столько легким в написании читаемости.
   Python очень хорош для Математики, ML, автоматизации( разного плана скриптов) и конечно де для web.
   Хоть на можно писат для разных встраеваемых систем,
   моб-разработки и для десктоп приложения(pyQt) - этот язык не лучий выбор для этого.

Q: Какие особенности Python вам доставляют больше всего неудобств?

A: Python очень хороший язык и больших недостатков в нем нет(иначе их бы исправили)). Чего не хватает для меня:
    иногда жесткой типизации. на смену приходит аннотация. но все рано приходится include typing в место просто написать list, set, dict.
    также работа с интерфейсами: хоть и есть ABC класс. но (как я знаю это не бестпрактикс) для использование везде. (хотя я уже отвык от этого)
    Раньше всегда было странно что список на пустоту можно проверить как if []: когда в ruby есть метод [].empty? Как по мне это немного не явно.
    GIL и меньшая скорость чем в некоторых других языка. Но в вебе это почти не достижимо.
         а если будут большие просадки всегда можно включить расширения на с++)

Q: Возможно ли писать программы на Python в функциональном стиле? Насколько он для этого подходит?

A: Да можно. Хотя Гвидо не задумывал его как таковой. Но благодаря таким пакетам как operator и functools это возможно.
   reduce, cum, map, partial, filter, etc. замыкания и списковые включения. Такcе есть функтор. Так что да на нем можно писать
   в данном стиле.

Q: Какие инструменты и методы помогают вам экономить время и избегать ошибок принаписании кода?

A: В разработке я пользуюсь разными средствами. IDE, pylint, isort, flak8 и славари - это помогает следить за стилем написание кода
   и не допускать банальных ошибок. для дебага ipdb или встроенный в разные дебагеры. также django toolbar для профилирования запросов.
   Также в коде докстринги, комментарии. и разбиение одного большого файла на больше маленьких ( что бы не запутаться в коде).
   На всех проектах пытаюсь писать по максимуму тестов(pytest) что упрощает поиск и тестирование сломанных частей)
   Также Git, ipython, vim, zsh. также разные плагины для IDE, сниппеты. Docker - если нужно протестить разные версии и/или дать это
   кому то еще. что бы не настраивать все с 0.
   Повторяющиеся действия(настройки, часто встречающиеся библиотеки, ошибки,) - стараюсь выносить или в вики или в онлайн блокноты.

Q: На каких ресурсах вы получаете информацию и новости по используемым технологиям?

A: reddit, habr, разные онлайн чаты, смотрю разные конференции, tproger, разные форумы. А так чаще читаю книги по конкретной
   технологии, что мне нужна. И документации)

Q: Расскажите нам о себе и о ваших последних работах (в рамках допустимого).

A: Меня зовут Олег мне 25 лет. На python программирую около 3 лет, также по университету программировал на C/C++, php, ruby.
   В продакшен разработке чуть больше 2 лет(хотя были и фрилансы во время учебы).
   Последнее место работы geo.online где работаю уже окло 2х лет( это та же фирма что и vbo)
   На нынешнем месте работы занимался созданием с 0 и поддержкой старых проектов.
   Один из последних - портал http://geo.online. Это рекрутинговый и новостной сервис для сотрудников отрасли недропользования.
   В нем я занимался разработкой всех разделов на разных стадиях, в том числе с нуля.
   Работа была в команде от 2 до 4 backend-разработчиков, 1-2 frontend-ов и одного тестировщика.
В мои обязанности входили:
- выбор инструментов и архитектуры;
- построение моделей, бизнес-логики, API, парсеров разной сложности;
- интеграция с сторонними сервисами;
- оптимизация кода и запросов;
- написание тестов, code-review;
- настройка серверов.

Этот проект занимал основное время на протяжении моей работы в "Гео Онлайн".
 Были и сторонние проекты: последний из них сайт ресторана "Хабо" - https://habo.rest/.
 Его писал с нуля.
Стек технологий применяемых в данных проектах:
Python 3.7, Django, DRF, Postgres, Celery, RabbitMQ, Redis, Elasticsearh, Pythest, Nginx, Docker.
Для документации использовали swagger, wiki.


Практическое задание
https://github.com/Olegblow/funbox_test
Данное задание я реализовал с помощь Django (хотя по мне это оверхед, для этого задания)
Также думал над альтернативными библиатекамиr: aiohttp и flask. Но остановился на django, так как в нем больше всего экспертиза.
Да и вакансия по django.
Для aiohttp использовал бы aioredis.
Если будут вопросы буду рад на них ответить.

